// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuctionCanceled extends ethereum.Event {
  get params(): AuctionCanceled__Params {
    return new AuctionCanceled__Params(this);
  }
}

export class AuctionCanceled__Params {
  _event: AuctionCanceled;

  constructor(event: AuctionCanceled) {
    this._event = event;
  }

  get propertyAddress(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AuctionCreated extends ethereum.Event {
  get params(): AuctionCreated__Params {
    return new AuctionCreated__Params(this);
  }
}

export class AuctionCreated__Params {
  _event: AuctionCreated;

  constructor(event: AuctionCreated) {
    this._event = event;
  }

  get propertyAddress(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get startingPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get auctionEndTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AuctionEnded extends ethereum.Event {
  get params(): AuctionEnded__Params {
    return new AuctionEnded__Params(this);
  }
}

export class AuctionEnded__Params {
  _event: AuctionEnded;

  constructor(event: AuctionEnded) {
    this._event = event;
  }

  get propertyAddress(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get highestBidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get highestBid(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BidPlaced extends ethereum.Event {
  get params(): BidPlaced__Params {
    return new BidPlaced__Params(this);
  }
}

export class BidPlaced__Params {
  _event: BidPlaced;

  constructor(event: BidPlaced) {
    this._event = event;
  }

  get propertyAddress(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PropertyDocsUpdated extends ethereum.Event {
  get params(): PropertyDocsUpdated__Params {
    return new PropertyDocsUpdated__Params(this);
  }
}

export class PropertyDocsUpdated__Params {
  _event: PropertyDocsUpdated;

  constructor(event: PropertyDocsUpdated) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get newDocumentHash(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class PropertyPriceUpdated extends ethereum.Event {
  get params(): PropertyPriceUpdated__Params {
    return new PropertyPriceUpdated__Params(this);
  }
}

export class PropertyPriceUpdated__Params {
  _event: PropertyPriceUpdated;

  constructor(event: PropertyPriceUpdated) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get oldPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PropertyRegistered extends ethereum.Event {
  get params(): PropertyRegistered__Params {
    return new PropertyRegistered__Params(this);
  }
}

export class PropertyRegistered__Params {
  _event: PropertyRegistered;

  constructor(event: PropertyRegistered) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get location(): string {
    return this._event.parameters[2].value.toString();
  }

  get ipfsHash(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class PropertyTransferred extends ethereum.Event {
  get params(): PropertyTransferred__Params {
    return new PropertyTransferred__Params(this);
  }
}

export class PropertyTransferred__Params {
  _event: PropertyTransferred;

  constructor(event: PropertyTransferred) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get oldOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PropertyVerified extends ethereum.Event {
  get params(): PropertyVerified__Params {
    return new PropertyVerified__Params(this);
  }
}

export class PropertyVerified__Params {
  _event: PropertyVerified;

  constructor(event: PropertyVerified) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class TransactionCompleted extends ethereum.Event {
  get params(): TransactionCompleted__Params {
    return new TransactionCompleted__Params(this);
  }
}

export class TransactionCompleted__Params {
  _event: TransactionCompleted;

  constructor(event: TransactionCompleted) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TransactionConfirmed extends ethereum.Event {
  get params(): TransactionConfirmed__Params {
    return new TransactionConfirmed__Params(this);
  }
}

export class TransactionConfirmed__Params {
  _event: TransactionConfirmed;

  constructor(event: TransactionConfirmed) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TransactionInitiated extends ethereum.Event {
  get params(): TransactionInitiated__Params {
    return new TransactionInitiated__Params(this);
  }
}

export class TransactionInitiated__Params {
  _event: TransactionInitiated;

  constructor(event: TransactionInitiated) {
    this._event = event;
  }

  get gpsAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PropertyRegistry__auctionsResult {
  value0: string;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;
  value7: boolean;

  constructor(
    value0: string,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean,
    value7: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    return map;
  }

  getPropertyAddress(): string {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getHighestBidder(): Address {
    return this.value2;
  }

  getStartingPrice(): BigInt {
    return this.value3;
  }

  getHighestBid(): BigInt {
    return this.value4;
  }

  getAuctionEndTime(): BigInt {
    return this.value5;
  }

  getIsActive(): boolean {
    return this.value6;
  }

  getBidPlaced(): boolean {
    return this.value7;
  }
}

export class PropertyRegistry__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getUpkeepNeeded(): boolean {
    return this.value0;
  }

  getPerformData(): Bytes {
    return this.value1;
  }
}

export class PropertyRegistry__getAuctionDetailsResultValue0Struct extends ethereum.Tuple {
  get propertyAddress(): string {
    return this[0].toString();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get highestBidder(): Address {
    return this[2].toAddress();
  }

  get startingPrice(): BigInt {
    return this[3].toBigInt();
  }

  get highestBid(): BigInt {
    return this[4].toBigInt();
  }

  get auctionEndTime(): BigInt {
    return this[5].toBigInt();
  }

  get isActive(): boolean {
    return this[6].toBoolean();
  }

  get bidPlaced(): boolean {
    return this[7].toBoolean();
  }
}

export class PropertyRegistry__propertiesResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: boolean;
  value5: BigInt;
  value6: boolean;
  value7: boolean;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: boolean,
    value5: BigInt,
    value6: boolean,
    value7: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    return map;
  }

  getOwner(): Address {
    return this.value0;
  }

  getLocation(): string {
    return this.value1;
  }

  getGpsAddress(): string {
    return this.value2;
  }

  getIpfsHash(): string {
    return this.value3;
  }

  getIsVerified(): boolean {
    return this.value4;
  }

  getPrice(): BigInt {
    return this.value5;
  }

  getBiddingStarted(): boolean {
    return this.value6;
  }

  getIsAuctionActive(): boolean {
    return this.value7;
  }
}

export class PropertyRegistry__transactionsResult {
  value0: Address;
  value1: Address;
  value2: boolean;
  value3: boolean;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: boolean,
    value3: boolean,
    value4: boolean,
    value5: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getBuyer(): Address {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getBuyerConfirmed(): boolean {
    return this.value2;
  }

  getSellerConfirmed(): boolean {
    return this.value3;
  }

  getAdminConfirmed(): boolean {
    return this.value4;
  }

  getIsActive(): boolean {
    return this.value5;
  }
}

export class PropertyRegistry extends ethereum.SmartContract {
  static bind(address: Address): PropertyRegistry {
    return new PropertyRegistry("PropertyRegistry", address);
  }

  TRANSACTION_FEE_PERCENTAGE(): BigInt {
    let result = super.call(
      "TRANSACTION_FEE_PERCENTAGE",
      "TRANSACTION_FEE_PERCENTAGE():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_TRANSACTION_FEE_PERCENTAGE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "TRANSACTION_FEE_PERCENTAGE",
      "TRANSACTION_FEE_PERCENTAGE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  activeAuctionList(param0: BigInt): string {
    let result = super.call(
      "activeAuctionList",
      "activeAuctionList(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toString();
  }

  try_activeAuctionList(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "activeAuctionList",
      "activeAuctionList(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  activeAuctions(param0: string): boolean {
    let result = super.call("activeAuctions", "activeAuctions(string):(bool)", [
      ethereum.Value.fromString(param0),
    ]);

    return result[0].toBoolean();
  }

  try_activeAuctions(param0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "activeAuctions",
      "activeAuctions(string):(bool)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  auctions(param0: string): PropertyRegistry__auctionsResult {
    let result = super.call(
      "auctions",
      "auctions(string):(string,address,address,uint256,uint256,uint256,bool,bool)",
      [ethereum.Value.fromString(param0)],
    );

    return new PropertyRegistry__auctionsResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toBoolean(),
    );
  }

  try_auctions(
    param0: string,
  ): ethereum.CallResult<PropertyRegistry__auctionsResult> {
    let result = super.tryCall(
      "auctions",
      "auctions(string):(string,address,address,uint256,uint256,uint256,bool,bool)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PropertyRegistry__auctionsResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toBoolean(),
      ),
    );
  }

  checkUpkeep(param0: Bytes): PropertyRegistry__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(param0),
    ]);

    return new PropertyRegistry__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes(),
    );
  }

  try_checkUpkeep(
    param0: Bytes,
  ): ethereum.CallResult<PropertyRegistry__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PropertyRegistry__checkUpkeepResult(
        value[0].toBoolean(),
        value[1].toBytes(),
      ),
    );
  }

  contractOwner(): Address {
    let result = super.call("contractOwner", "contractOwner():(address)", []);

    return result[0].toAddress();
  }

  try_contractOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "contractOwner",
      "contractOwner():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAuctionDetails(
    propertyAddress: string,
  ): PropertyRegistry__getAuctionDetailsResultValue0Struct {
    let result = super.call(
      "getAuctionDetails",
      "getAuctionDetails(string):((string,address,address,uint256,uint256,uint256,bool,bool))",
      [ethereum.Value.fromString(propertyAddress)],
    );

    return changetype<PropertyRegistry__getAuctionDetailsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getAuctionDetails(
    propertyAddress: string,
  ): ethereum.CallResult<PropertyRegistry__getAuctionDetailsResultValue0Struct> {
    let result = super.tryCall(
      "getAuctionDetails",
      "getAuctionDetails(string):((string,address,address,uint256,uint256,uint256,bool,bool))",
      [ethereum.Value.fromString(propertyAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PropertyRegistry__getAuctionDetailsResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getHighestBidder(propertyAddress: string): Address {
    let result = super.call(
      "getHighestBidder",
      "getHighestBidder(string):(address)",
      [ethereum.Value.fromString(propertyAddress)],
    );

    return result[0].toAddress();
  }

  try_getHighestBidder(propertyAddress: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getHighestBidder",
      "getHighestBidder(string):(address)",
      [ethereum.Value.fromString(propertyAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingReturns(param0: Address): BigInt {
    let result = super.call(
      "pendingReturns",
      "pendingReturns(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_pendingReturns(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingReturns",
      "pendingReturns(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  properties(param0: string): PropertyRegistry__propertiesResult {
    let result = super.call(
      "properties",
      "properties(string):(address,string,string,string,bool,uint256,bool,bool)",
      [ethereum.Value.fromString(param0)],
    );

    return new PropertyRegistry__propertiesResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toBoolean(),
    );
  }

  try_properties(
    param0: string,
  ): ethereum.CallResult<PropertyRegistry__propertiesResult> {
    let result = super.tryCall(
      "properties",
      "properties(string):(address,string,string,string,bool,uint256,bool,bool)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PropertyRegistry__propertiesResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toBoolean(),
      ),
    );
  }

  transactions(param0: string): PropertyRegistry__transactionsResult {
    let result = super.call(
      "transactions",
      "transactions(string):(address,address,bool,bool,bool,bool)",
      [ethereum.Value.fromString(param0)],
    );

    return new PropertyRegistry__transactionsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBoolean(),
      result[5].toBoolean(),
    );
  }

  try_transactions(
    param0: string,
  ): ethereum.CallResult<PropertyRegistry__transactionsResult> {
    let result = super.tryCall(
      "transactions",
      "transactions(string):(address,address,bool,bool,bool,bool)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PropertyRegistry__transactionsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBoolean(),
        value[5].toBoolean(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _contractOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AdminConfirmTransactionCall extends ethereum.Call {
  get inputs(): AdminConfirmTransactionCall__Inputs {
    return new AdminConfirmTransactionCall__Inputs(this);
  }

  get outputs(): AdminConfirmTransactionCall__Outputs {
    return new AdminConfirmTransactionCall__Outputs(this);
  }
}

export class AdminConfirmTransactionCall__Inputs {
  _call: AdminConfirmTransactionCall;

  constructor(call: AdminConfirmTransactionCall) {
    this._call = call;
  }

  get _gpsAddress(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _newDocumentHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AdminConfirmTransactionCall__Outputs {
  _call: AdminConfirmTransactionCall;

  constructor(call: AdminConfirmTransactionCall) {
    this._call = call;
  }
}

export class CancelAuctionCall extends ethereum.Call {
  get inputs(): CancelAuctionCall__Inputs {
    return new CancelAuctionCall__Inputs(this);
  }

  get outputs(): CancelAuctionCall__Outputs {
    return new CancelAuctionCall__Outputs(this);
  }
}

export class CancelAuctionCall__Inputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }

  get _gpsAddress(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CancelAuctionCall__Outputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }
}

export class ConfirmTransactionCall extends ethereum.Call {
  get inputs(): ConfirmTransactionCall__Inputs {
    return new ConfirmTransactionCall__Inputs(this);
  }

  get outputs(): ConfirmTransactionCall__Outputs {
    return new ConfirmTransactionCall__Outputs(this);
  }
}

export class ConfirmTransactionCall__Inputs {
  _call: ConfirmTransactionCall;

  constructor(call: ConfirmTransactionCall) {
    this._call = call;
  }

  get _gpsAddress(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ConfirmTransactionCall__Outputs {
  _call: ConfirmTransactionCall;

  constructor(call: ConfirmTransactionCall) {
    this._call = call;
  }
}

export class CreateAuctionCall extends ethereum.Call {
  get inputs(): CreateAuctionCall__Inputs {
    return new CreateAuctionCall__Inputs(this);
  }

  get outputs(): CreateAuctionCall__Outputs {
    return new CreateAuctionCall__Outputs(this);
  }
}

export class CreateAuctionCall__Inputs {
  _call: CreateAuctionCall;

  constructor(call: CreateAuctionCall) {
    this._call = call;
  }

  get _gpsAddress(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _auctionEndTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateAuctionCall__Outputs {
  _call: CreateAuctionCall;

  constructor(call: CreateAuctionCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get performData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class PlaceBidCall extends ethereum.Call {
  get inputs(): PlaceBidCall__Inputs {
    return new PlaceBidCall__Inputs(this);
  }

  get outputs(): PlaceBidCall__Outputs {
    return new PlaceBidCall__Outputs(this);
  }
}

export class PlaceBidCall__Inputs {
  _call: PlaceBidCall;

  constructor(call: PlaceBidCall) {
    this._call = call;
  }

  get propertyAddress(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class PlaceBidCall__Outputs {
  _call: PlaceBidCall;

  constructor(call: PlaceBidCall) {
    this._call = call;
  }
}

export class RegisterPropertyCall extends ethereum.Call {
  get inputs(): RegisterPropertyCall__Inputs {
    return new RegisterPropertyCall__Inputs(this);
  }

  get outputs(): RegisterPropertyCall__Outputs {
    return new RegisterPropertyCall__Outputs(this);
  }
}

export class RegisterPropertyCall__Inputs {
  _call: RegisterPropertyCall;

  constructor(call: RegisterPropertyCall) {
    this._call = call;
  }

  get _location(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _gpsAddress(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterPropertyCall__Outputs {
  _call: RegisterPropertyCall;

  constructor(call: RegisterPropertyCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdatePropertyPriceCall extends ethereum.Call {
  get inputs(): UpdatePropertyPriceCall__Inputs {
    return new UpdatePropertyPriceCall__Inputs(this);
  }

  get outputs(): UpdatePropertyPriceCall__Outputs {
    return new UpdatePropertyPriceCall__Outputs(this);
  }
}

export class UpdatePropertyPriceCall__Inputs {
  _call: UpdatePropertyPriceCall;

  constructor(call: UpdatePropertyPriceCall) {
    this._call = call;
  }

  get _gpsAddress(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _newPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdatePropertyPriceCall__Outputs {
  _call: UpdatePropertyPriceCall;

  constructor(call: UpdatePropertyPriceCall) {
    this._call = call;
  }
}

export class VerifyPropertyCall extends ethereum.Call {
  get inputs(): VerifyPropertyCall__Inputs {
    return new VerifyPropertyCall__Inputs(this);
  }

  get outputs(): VerifyPropertyCall__Outputs {
    return new VerifyPropertyCall__Outputs(this);
  }
}

export class VerifyPropertyCall__Inputs {
  _call: VerifyPropertyCall;

  constructor(call: VerifyPropertyCall) {
    this._call = call;
  }

  get _gpsAddress(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class VerifyPropertyCall__Outputs {
  _call: VerifyPropertyCall;

  constructor(call: VerifyPropertyCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
